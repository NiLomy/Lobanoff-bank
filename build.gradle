plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ru.kpfu.itis'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	enabled = false
}
jar {
	enabled = true
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation("org.springframework.boot:spring-boot-starter-integration")
		implementation("org.springframework.boot:spring-boot-starter-validation")
	}

	dependencies {
		compileOnly("org.projectlombok:lombok")
		annotationProcessor("org.projectlombok:lombok")
	}

	dependencies {
		testImplementation("org.springframework.boot:spring-boot-starter-test")
		testImplementation("org.springframework.integration:spring-integration-test")
	}
}

project(':api') {
	bootJar {
		enabled = false
	}
	jar {
		enabled = true
	}

	dependencies {
		implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'
	}
}

project(':database') {
	bootJar {
		enabled = false
	}
	jar {
		enabled = true
	}

	dependencies {
		implementation 'org.liquibase:liquibase-core'
		runtimeOnly 'org.postgresql:postgresql'
	}
}

project(':registry-service') {
	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	}

	dependencies {
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':gateway-service') {
	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
	}

	dependencies {
		implementation 'org.springframework.integration:spring-integration-security'
	}

	dependencies {
		implementation project(':api')

		runtimeOnly 'org.postgresql:postgresql'
	}

	dependencies {
		implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
	}

	dependencies {
		testImplementation 'org.springframework.security:spring-security-test'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}
}

project(':core-service') {
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-freemarker'
		implementation 'org.springframework.boot:spring-boot-starter-websocket'
		implementation 'org.springframework.boot:spring-boot-starter-mail'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
	}

	dependencies {
		implementation 'org.springframework.integration:spring-integration-http'
		implementation 'org.springframework.integration:spring-integration-jpa'
		implementation 'org.springframework.integration:spring-integration-stomp'
		implementation 'org.springframework.integration:spring-integration-websocket'
		implementation 'org.springframework.integration:spring-integration-security'
	}

	dependencies {
		implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
	}

	dependencies {
		implementation project(':api')
		implementation project(':database')

		implementation "javax.mail:javax.mail-api:1.6.2"

		implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '5.0.0-alpha.14'

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.14.12'

		implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '5.13.0'
		implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '5.13.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'

		runtimeOnly 'org.postgresql:postgresql'
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.security:spring-security-test'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}
}

project(':chat-service') {
	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-freemarker'
		implementation 'org.springframework.boot:spring-boot-starter-websocket'
		implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	}

	dependencies {
		implementation 'org.springframework.integration:spring-integration-http'
		implementation 'org.springframework.integration:spring-integration-jpa'
		implementation 'org.springframework.integration:spring-integration-stomp'
		implementation 'org.springframework.integration:spring-integration-websocket'
	}

	dependencies {
		implementation project(':api')

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'

		runtimeOnly 'org.postgresql:postgresql'
	}

	dependencies {
		implementation("org.webjars:stomp-websocket:2.3.4")
		implementation("org.webjars:sockjs-client:1.5.1")
		implementation("org.webjars:jquery:3.6.0")
		implementation("org.webjars:bootstrap:4.6.0")
		implementation("org.webjars:webjars-locator-core:0.46")
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '4.12.6'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':notification-service') {
	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-freemarker'
		implementation 'org.springframework.boot:spring-boot-starter-mail'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
	}

	dependencies {
		implementation project(':api')

		implementation "javax.mail:javax.mail-api:1.6.2"

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':commission-service') {
	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
	}

	dependencies {
		implementation project(':api')

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':cashback-service') {
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		runtimeOnly 'org.postgresql:postgresql'
	}

	dependencies {
		implementation project(':api')

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':final-service') {
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	ext {
		set('springCloudVersion', "2023.0.1")
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		runtimeOnly 'org.postgresql:postgresql'
	}

	dependencies {
		implementation project(':api')

		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	dependencies {
		testImplementation 'junit:junit:4.13.1'
		testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
